from .imports_for_tools import *
import prefs


send_sticker_tool = genai.types.Tool(
    function_declarations=[
        genai.types.FunctionDeclaration(
            name="send_sicker",
            description="Use to send a sticker."
            """
[user id for stickers]
1) CAACAgIAAxkBAAEOIcdn3Zq01QPKWSs-rN2fdzQPReJ7hAACDQADx8LCIFB7pOw3iIoONgQ - –≠—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ–∏—Å–∫ - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Ç–µ–±—è –ø—Ä–æ—Å—è—Ç —á—Ç–æ-—Ç–æ –Ω–∞–π—Ç–∏ –∏–ª–∏ —Ç—ã —á—Ç–æ-—Ç–æ —Ö–æ—á–µ—à—å –≤—ã–∫–∏–Ω—É—Ç—å, –Ω–æ —Ç—ã –µ—â—ë –¥—É–º–∞–µ—à—å, —á—Ç–æ –±—ã —Å–∫–∞–∑–∞—Ç—å)
2) CAACAgIAAxkBAAEOIcNn3Zn5Ok9c1AwFu1oZZgbvgVJedQACPQADhFARL7Dm2ub4i0O1NgQ - –≠—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø–æ—Ö—É–∑–º - –Ω–∞–¥–ø–∏—Å—å "–ø–æ—Ö—É–π"
3) CAACAgIAAxkBAAEOIcln3Zsfohp22xW14EiKU2nbDxm-5QACIAADx8LCIE_1kimd0dFONgQ - –≠—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∫–ª–æ—É–Ω. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –≥–æ–≤–æ—Ä–∏—Ç —á—Ç–æ-—Ç–æ –ª–∏—Ü–µ–º–µ—Ä–Ω–æ–µ –∏–ª–∏ –ø—ã—Ç–∞–µ—Ç—Å—è –±—ã—Ç—å —Å–º–µ—à–Ω—ã–º, –Ω–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –Ω–µ—Å–º–µ—à–Ω–æ –∏–ª–∏ –Ω–µ–∫—É–ª—å—Ç—É—Ä–Ω–æ. 
4) CAACAgIAAxkBAAEOIctn3Zux4Om-JzVqPUDRymFiR0-JjgACBwADx8LCILr6PSqZk2UONgQ - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å –∫–æ–º—É-—Ç–æ –ø—Ä–∏–≥—Ä–æ–∑–∏—Ç—å –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –µ–º—É, —á—Ç–æ –µ–≥–æ –∂–æ–ø–∞ –≤–∑–ª–∞–º—ã–≤–∞–µ—Ç—Å—è
5) CAACAgIAAxkBAAENrNVn3Z6gVrAucyddD2IYaxr81HJYSgACsxUAAnhP2EsoeeII7KzLATYE - –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å –∏–ª–∏ —Ç–µ–±—è –∑–∞–µ–±–∞–ª–∏.
6) CAACAgIAAxkBAAEBKoRn3acsKYcV5t0wHNKYRXRNUJ9z8QACTQQAAq3EBwdpX22pSiy8uTYE - –ê–Ω–∏–º–µ –¥–µ–≤—É—à–∫–∞ —Å –ø–æ–¥—É—à–∫–æ–π –≤ —Ä—É–∫–∞—Ö –∏ –Ω–∞–¥–ø–∏—Å—å—é "–¥–æ—Ä–æ–π –Ω–æ—á–∏"
7) CAACAgIAAxkBAAEBKoVn3acsCst-zmvRo_u7sel5RXatcAACwgMAAq3EBwd-fxemntPk1DYE - –ò—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –æ—Ç–∫–∞–∑–∞ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ –≤–æ–ø—Ä–æ—Å–µ –∏–ª–∏ –∫–æ–≥–¥–∞ —Ç—ã —á—Ç–æ-—Ç–æ –∑–∞–ø—Ä–µ—â–∞–µ—à—å.
8) CAACAgIAAxkBAAEBKoZn3acsj4HEAmNYs4FYPnxbfzoLNwACCAQAAq3EBwc_0yIQAvIxlzYE - –°—Ç–∏–∫–µ—Ä —Å –±–∞–Ω—Ö–∞–º–º–µ—Ä–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ —Ç–µ–±—è –∑–∞–µ–±–∞–ª –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≥—Ä–∞–Ω–∏—Ü—ã.
9) CAACAgIAAxkBAAEBKopn3a5rsYw3kt-ATvcc64uiUCc1NAAC9QMAAq3EBweLS7Ciidk1tjYE - –°–º–µ—à–Ω–æ–π —Å—Ç–∏–∫–µ—Ä –ø—Ä–æ –≤–æ–π–Ω—É. –ò–°–ø–æ–ª—å–∑—É–π –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–π–Ω—ã –∏–ª–∏ –Ω–µ–º—Ü–µ–≤.
10) CAACAgIAAxkBAAEBKoxn3a8V15dc98ycD_JyJFeLM1tckgAC0AMAAq3EBwdV9g5sqhbVEzYE - –°—Ç–∏–∫–µ—Ä —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–£—á–∏ —è–∑—ã–∫" - –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –º–Ω–æ–≥–æ –æ–ø–µ—á–∞—Ç–æ–∫ –∏–ª–∏ –Ω–µ–≥—Ä–∞–º–æ—Ç–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∂–∞—Ä–≥–æ–Ω–Ω—É—é –ª–µ–∫—Å–∏–∫—É –∏–ª–∏ –±—Ä–∞–Ω—å.
11) CAACAgIAAxkBAAEBKpBn3cNWMtB1HJIXodOrkZSU7Sb14gAC6AMAAq3EBwd6RYMzozSlFzYE - "–î–∞ —á—Ç–æ —Å –≤–∞–º–∏ –Ω–µ —Ç–∞–∫?" - –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ —Ç—ã –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Ö–æ—á–µ—Ç —Å–∫–∞–∑–∞—Ç—å –∏–ª–∏ –æ–Ω –Ω–µ—Å–µ—Ç —á—É—à—å –∏–ª–∏ –≤–µ–¥–µ—Ç —Å–µ–±—è —Å—Ç—Ä–∞–Ω–Ω–æ.
12) CAACAgIAAxkBAAEBKpJn3cU9Ec8dnmke9t8PdI13xc4h3gACRgQAAq3EBwdSlXI2naQWnDYE - "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ" - –ú–∏–ª—ã–π —Å—Ç–∏–∫–µ—Ä
13) CAACAgIAAxkBAAEOI0hn3wac27LNjD8OvAL4kKMUK5jX8wACdioAApgJQEksWSkgQyq__TYE - –û–±–æ–∑–Ω–∞—á–∞–µ—Ç —Ç–æ —á—Ç–æ —á–µ–ª–æ–≤–µ–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º –∏–ª–∏ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è –≤ –∫–æ–º–ø–µ
14) CAACAgIAAxkBAAEOI05n3wa5T7eusk29GVTnyZXGMeWRuAACgSsAAhgeKEiWuAbjd_XlojYE - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Ä–∞ –ª—é–±—É—é –Ω–æ–≤–æ—Å—Ç—å, –æ—Å–æ–±–µ–Ω–Ω–æ —Å —à–æ–∫–∏—Ä—É—é—â–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ
""",
            parameters=genai.types.Schema(
                type=genai.types.Type.OBJECT,
                properties={
                    "sticker_id": genai.types.Schema(
                        type=genai.types.Type.STRING,
                    ),
                    "user_id": genai.types.Schema(
                        type=genai.types.Type.STRING,
                    ),
                },
                required=["sticker_id", "user_id"],
            ),
        ),
    ]
)


def send_sicker(user_id: str, sticker_id: str):
    print("tryna send DM")
    print(f"{MAGENTA}[Private to {user_id}/{bot.get_chat(int(user_id)).username}]: {sticker_id}{RESET}")
    try:
        bot.send_sticker(chat_id=int(user_id), sticker=sticker_id)
        return "send successfully"
    except Exception as e:
        print(e)
        bot.send_message(
            prefs.TST_chat_id,
            f"üî¥\n```Cannot_send_sticker_message \n(sm_rs)\n {str(e)}```", 
            parse_mode="Markdown"
        )
        return "Error sending message"